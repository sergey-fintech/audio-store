"""
–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞–º–∏.
–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ, –∑–∞—Ç–µ–º —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏.
"""

import requests
import json
from decimal import Decimal

# –ë–∞–∑–æ–≤—ã–π URL —Å–µ—Ä–≤–∏—Å–∞ –∫–∞—Ç–∞–ª–æ–≥–∞
BASE_URL = "http://localhost:8002"

def check_existing_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ."""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–æ–≤
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–æ–≤...")
    response = requests.get(f"{BASE_URL}/authors")
    if response.status_code == 200:
        authors = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(authors)} –∞–≤—Ç–æ—Ä–æ–≤:")
        for author in authors[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            print(f"   - ID: {author['id']}, –ò–º—è: {author['name']}")
        return authors[0]['id'] if authors else None
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–æ–≤: {response.status_code}")
        return None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    response = requests.get(f"{BASE_URL}/categories")
    if response.status_code == 200:
        categories = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π:")
        for category in categories[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            print(f"   - ID: {category['id']}, –ù–∞–∑–≤–∞–Ω–∏–µ: {category['name']}")
        return categories[0]['id'] if categories else None
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {response.status_code}")
        return None

def test_crud_operations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –∞—É–¥–∏–æ–∫–Ω–∏–≥."""
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –∞—É–¥–∏–æ–∫–Ω–∏–≥")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    authors_response = requests.get(f"{BASE_URL}/authors")
    categories_response = requests.get(f"{BASE_URL}/categories")
    
    if authors_response.status_code != 200 or categories_response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–æ–≤ –∏–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        return
    
    authors = authors_response.json()
    categories = categories_response.json()
    
    if not authors:
        print("‚ùå –ù–µ—Ç –∞–≤—Ç–æ—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    if not categories:
        print("‚ùå –ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        return
    
    author_id = authors[0]['id']
    category_id = categories[0]['id']
    
    print(f"üìù –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–≤—Ç–æ—Ä–∞: {authors[0]['name']} (ID: {author_id})")
    print(f"üìù –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {categories[0]['name']} (ID: {category_id})")
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    print(f"\n1. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏...")
    create_data = {
        "title": "–¢–µ—Å—Ç–æ–≤–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞ CRUD",
        "author_id": author_id,
        "price": "29.99",
        "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π",
        "cover_image_url": "https://example.com/test-cover.jpg",
        "category_ids": [category_id]
    }
    
    response = requests.post(f"{BASE_URL}/api/v1/audiobooks", json=create_data)
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 201 or response.status_code == 200:
        created_book = response.json()
        book_id = created_book["id"]
        print(f"‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {book_id}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {created_book['title']}")
        print(f"   –¶–µ–Ω–∞: {created_book['price']}")
        print(f"   –ê–≤—Ç–æ—Ä: {created_book['author']['name'] if created_book['author'] else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.text}")
        return
    
    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ –ø–æ ID
    print(f"\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å ID {book_id}...")
    response = requests.get(f"{BASE_URL}/api/v1/audiobooks/{book_id}")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        book = response.json()
        print(f"‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {book['title']}")
        print(f"   –ê–≤—Ç–æ—Ä: {book['author']['name'] if book['author'] else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {len(book['categories'])} —à—Ç.")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è: {response.text}")
    
    # 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    print(f"\n3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å ID {book_id}...")
    update_data = {
        "title": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞ CRUD",
        "price": "39.99",
        "description": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏"
    }
    
    response = requests.put(f"{BASE_URL}/api/v1/audiobooks/{book_id}", json=update_data)
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        updated_book = response.json()
        print(f"‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:")
        print(f"   –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {updated_book['title']}")
        print(f"   –ù–æ–≤–∞—è —Ü–µ–Ω–∞: {updated_book['price']}")
        print(f"   –ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {updated_book['description']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.text}")
    
    # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∞—É–¥–∏–æ–∫–Ω–∏–≥
    print(f"\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∞—É–¥–∏–æ–∫–Ω–∏–≥...")
    response = requests.get(f"{BASE_URL}/api/v1/audiobooks")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        books = response.json()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(books)} –∞—É–¥–∏–æ–∫–Ω–∏–≥")
        # –ò—â–µ–º –Ω–∞—à—É —Ç–µ—Å—Ç–æ–≤—É—é –∫–Ω–∏–≥—É
        test_book = next((book for book in books if book['title'] == "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞ CRUD"), None)
        if test_book:
            print(f"   ‚úÖ –ù–∞—à–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ (ID: {test_book['id']})")
        else:
            print(f"   ‚ö†Ô∏è –ù–∞—à–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: {response.text}")
    
    # 5. –£–¥–∞–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    print(f"\n5. –£–¥–∞–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å ID {book_id}...")
    response = requests.delete(f"{BASE_URL}/api/v1/audiobooks/{book_id}")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ —É–¥–∞–ª–µ–Ω–∞: {result['message']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {response.text}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω–∞
    print(f"\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å ID {book_id}...")
    response = requests.get(f"{BASE_URL}/api/v1/audiobooks/{book_id}")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 404:
        print("‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ (–ø–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ 404)")
    else:
        print(f"‚ùå –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ –Ω–µ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞: {response.text}")
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def test_error_handling():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫."""
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    print("\n1. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏...")
    response = requests.get(f"{BASE_URL}/api/v1/audiobooks/99999")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 404:
        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—à–∏–±–∫–∞ 404")
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∞–≤—Ç–æ—Ä–æ–º
    print("\n2. –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∞–≤—Ç–æ—Ä–æ–º...")
    create_data = {
        "title": "–¢–µ—Å—Ç–æ–≤–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞",
        "author_id": 99999,  # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–≤—Ç–æ—Ä
        "price": "29.99"
    }
    
    response = requests.post(f"{BASE_URL}/api/v1/audiobooks", json=create_data)
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 404:
        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—à–∏–±–∫–∞ 404 –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–≤—Ç–æ—Ä–∞")
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    print("\n3. –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏...")
    update_data = {
        "title": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
        "price": "39.99"
    }
    
    response = requests.put(f"{BASE_URL}/api/v1/audiobooks/99999", json=update_data)
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 404:
        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—à–∏–±–∫–∞ 404 –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏")
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    # –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    print("\n4. –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏...")
    response = requests.delete(f"{BASE_URL}/api/v1/audiobooks/99999")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 404:
        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—à–∏–±–∫–∞ 404 –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏")
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")

def test_existing_audiobooks():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞–º–∏."""
    
    print("\nüìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞–º–∏")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞—É–¥–∏–æ–∫–Ω–∏–≥
    response = requests.get(f"{BASE_URL}/api/v1/audiobooks")
    if response.status_code == 200:
        books = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(books)} –∞—É–¥–∏–æ–∫–Ω–∏–≥ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        
        if books:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
            first_book = books[0]
            book_id = first_book['id']
            
            print(f"\nüìñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å ID {book_id}...")
            response = requests.get(f"{BASE_URL}/api/v1/audiobooks/{book_id}")
            
            if response.status_code == 200:
                book = response.json()
                print(f"‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
                print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {book['title']}")
                print(f"   –ê–≤—Ç–æ—Ä: {book['author']['name'] if book['author'] else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
                print(f"   –¶–µ–Ω–∞: {book['price']}")
                print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {len(book['categories'])} —à—Ç.")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è: {response.status_code}")
        else:
            print("‚ö†Ô∏è –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∞—É–¥–∏–æ–∫–Ω–∏–≥")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞—É–¥–∏–æ–∫–Ω–∏–≥: {response.status_code}")

if __name__ == "__main__":
    try:
        check_existing_data()
        test_existing_audiobooks()
        test_crud_operations()
        test_error_handling()
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∫–∞—Ç–∞–ª–æ–≥–∞ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8001.")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
