"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞–º–∏.
"""

import requests
import json
from decimal import Decimal

# –ë–∞–∑–æ–≤—ã–π URL —Å–µ—Ä–≤–∏—Å–∞ –∫–∞—Ç–∞–ª–æ–≥–∞
BASE_URL = "http://localhost:8002"

def test_crud_operations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –∞—É–¥–∏–æ–∫–Ω–∏–≥."""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CRUD –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –∞—É–¥–∏–æ–∫–Ω–∏–≥")
    print("=" * 50)
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏...")
    create_data = {
        "title": "–¢–µ—Å—Ç–æ–≤–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞",
        "author_id": 1,  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –∞–≤—Ç–æ—Ä —Å ID=1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        "price": "29.99",
        "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏",
        "cover_image_url": "https://example.com/cover.jpg",
        "category_ids": [1]  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å ID=1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    }
    
    response = requests.post(f"{BASE_URL}/api/v1/audiobooks", json=create_data)
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 201 or response.status_code == 200:
        created_book = response.json()
        book_id = created_book["id"]
        print(f"‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {book_id}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {created_book['title']}")
        print(f"   –¶–µ–Ω–∞: {created_book['price']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {response.text}")
        return
    
    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ –ø–æ ID
    print(f"\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å ID {book_id}...")
    response = requests.get(f"{BASE_URL}/api/v1/audiobooks/{book_id}")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        book = response.json()
        print(f"‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ –ø–æ–ª—É—á–µ–Ω–∞:")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {book['title']}")
        print(f"   –ê–≤—Ç–æ—Ä: {book['author']['name'] if book['author'] else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è: {response.text}")
    
    # 3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    print(f"\n3. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å ID {book_id}...")
    update_data = {
        "title": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞",
        "price": "39.99",
        "description": "–û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
    }
    
    response = requests.put(f"{BASE_URL}/api/v1/audiobooks/{book_id}", json=update_data)
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        updated_book = response.json()
        print(f"‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:")
        print(f"   –ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {updated_book['title']}")
        print(f"   –ù–æ–≤–∞—è —Ü–µ–Ω–∞: {updated_book['price']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.text}")
    
    # 4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∞—É–¥–∏–æ–∫–Ω–∏–≥
    print(f"\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∞—É–¥–∏–æ–∫–Ω–∏–≥...")
    response = requests.get(f"{BASE_URL}/api/v1/audiobooks")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        books = response.json()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(books)} –∞—É–¥–∏–æ–∫–Ω–∏–≥")
        for book in books[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
            print(f"   - {book['title']} (ID: {book['id']})")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: {response.text}")
    
    # 5. –£–¥–∞–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    print(f"\n5. –£–¥–∞–ª–µ–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å ID {book_id}...")
    response = requests.delete(f"{BASE_URL}/api/v1/audiobooks/{book_id}")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        print(f"‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ —É–¥–∞–ª–µ–Ω–∞: {result['message']}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {response.text}")
    
    # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω–∞
    print(f"\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å ID {book_id}...")
    response = requests.get(f"{BASE_URL}/api/v1/audiobooks/{book_id}")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 404:
        print("‚úÖ –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ (–ø–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ 404)")
    else:
        print(f"‚ùå –ê—É–¥–∏–æ–∫–Ω–∏–≥–∞ –Ω–µ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞: {response.text}")
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def test_error_handling():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫."""
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
    print("\n1. –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏...")
    response = requests.get(f"{BASE_URL}/api/v1/audiobooks/99999")
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 404:
        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—à–∏–±–∫–∞ 404")
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    
    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∞–≤—Ç–æ—Ä–æ–º
    print("\n2. –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∞–≤—Ç–æ—Ä–æ–º...")
    create_data = {
        "title": "–¢–µ—Å—Ç–æ–≤–∞—è –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞",
        "author_id": 99999,  # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–≤—Ç–æ—Ä
        "price": "29.99"
    }
    
    response = requests.post(f"{BASE_URL}/api/v1/audiobooks", json=create_data)
    print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
    
    if response.status_code == 404:
        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—à–∏–±–∫–∞ 404 –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–≤—Ç–æ—Ä–∞")
    else:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")

if __name__ == "__main__":
    try:
        test_crud_operations()
        test_error_handling()
    except requests.exceptions.ConnectionError:
        print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∫–∞—Ç–∞–ª–æ–≥–∞ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8001.")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
