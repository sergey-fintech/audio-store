#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è
"""

import requests
import json
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
RECOMMENDER_SERVICE_URL = "http://localhost:8005"
CATALOG_SERVICE_URL = "http://localhost:8002"

def test_description_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º recommender —Å–µ—Ä–≤–∏—Å
        response = requests.get(f"{RECOMMENDER_SERVICE_URL}/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Recommender —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå Recommender —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ recommender —Å–µ—Ä–≤–∏—Å—É: {e}")
        return
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º catalog —Å–µ—Ä–≤–∏—Å
        response = requests.get(f"{CATALOG_SERVICE_URL}/api/v1/audiobooks", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Catalog —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
            audiobooks = response.json()
            if audiobooks:
                print(f"üìö –ù–∞–π–¥–µ–Ω–æ {len(audiobooks)} –∞—É–¥–∏–æ–∫–Ω–∏–≥")
            else:
                print("‚ö†Ô∏è –ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç")
                return
        else:
            print(f"‚ùå Catalog —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ catalog —Å–µ—Ä–≤–∏—Å—É: {e}")
        return
    
    # 2. –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –∫–Ω–∏–≥—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\n2Ô∏è‚É£ –í—ã–±–æ—Ä –∫–Ω–∏–≥–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    first_book = audiobooks[0]
    book_id = first_book['id']
    book_title = first_book['title']
    current_description = first_book.get('description', '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
    
    print(f"üìñ –í—ã–±—Ä–∞–Ω–∞ –∫–Ω–∏–≥–∞: {book_title} (ID: {book_id})")
    print(f"üìù –¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {current_description[:100]}..." if len(current_description) > 100 else f"üìù –¢–µ–∫—É—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {current_description}")
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ–ø–∏—Å–∞–Ω–∏—è
    print(f"\n3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–Ω–∏–≥–∏ {book_id}...")
    
    try:
        url = f"{RECOMMENDER_SERVICE_URL}/api/v1/recommendations/generate-description/{book_id}"
        payload = {
            "model": "gemini-pro"
        }
        
        print(f"üîó URL: {url}")
        print(f"üì§ Payload: {json.dumps(payload, ensure_ascii=False, indent=2)}")
        
        response = requests.post(url, json=payload, timeout=60)
        
        print(f"üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–ø–∏—Å–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–∞!")
            print(f"üìù –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
            print("-" * 50)
            print(result['generated_description'])
            print("-" * 50)
            print(f"ü§ñ –ú–æ–¥–µ–ª—å: {result['model_alias']} -> {result['model']}")
            print(f"‚úÖ –£—Å–ø–µ—Ö: {result['success']}")
            
            # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–∏–ª–æ—Å—å –≤ catalog
            print(f"\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ catalog —Å–µ—Ä–≤–∏—Å–µ...")
            time.sleep(2)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
            
            check_response = requests.get(f"{CATALOG_SERVICE_URL}/api/v1/audiobooks/{book_id}")
            if check_response.status_code == 200:
                updated_book = check_response.json()
                updated_description = updated_book.get('description', '')
                print(f"üìù –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ catalog:")
                print("-" * 50)
                print(updated_description)
                print("-" * 50)
                
                if updated_description == result['generated_description']:
                    print("‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ catalog —Å–µ—Ä–≤–∏—Å–µ!")
                else:
                    print("‚ö†Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ –≤ catalog –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {check_response.status_code}")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è: {response.status_code}")
            print(f"üìù –û—Ç–≤–µ—Ç: {response.text}")
            
    except requests.exceptions.Timeout:
        print("‚è∞ –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è (60 —Å–µ–∫—É–Ω–¥)")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è: {e}")
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_description_generation()
