#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
"""

import socket
import requests
import json

def check_port(host, port):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ—Ç–∫—Ä—ã—Ç –ª–∏ –ø–æ—Ä—Ç"""
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(2)
        result = sock.connect_ex((host, port))
        sock.close()
        return result == 0
    except:
        return False

def test_catalog():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–∞—Ç–∞–ª–æ–≥'"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ '–ö–∞—Ç–∞–ª–æ–≥' (–ø–æ—Ä—Ç 8001)...")
    
    if not check_port('localhost', 8001):
        print("‚ùå –ü–æ—Ä—Ç 8001 –Ω–µ –æ—Ç–∫—Ä—ã—Ç")
        return False
    
    try:
        response = requests.get("http://localhost:8001/health", timeout=3)
        if response.status_code == 200:
            print("‚úÖ –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–∞—Ç–∞–ª–æ–≥' —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_cart():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–æ—Ä–∑–∏–Ω–∞'"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ '–ö–æ—Ä–∑–∏–Ω–∞' (–ø–æ—Ä—Ç 8002)...")
    
    if not check_port('localhost', 8002):
        print("‚ùå –ü–æ—Ä—Ç 8002 –Ω–µ –æ—Ç–∫—Ä—ã—Ç")
        return False
    
    try:
        response = requests.get("http://localhost:8002/health", timeout=3)
        if response.status_code == 200:
            print("‚úÖ –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–æ—Ä–∑–∏–Ω–∞' —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def main():
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤")
    print("=" * 40)
    
    catalog_ok = test_catalog()
    cart_ok = test_cart()
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    print(f"   –ö–∞—Ç–∞–ª–æ–≥: {'‚úÖ' if catalog_ok else '‚ùå'}")
    print(f"   –ö–æ—Ä–∑–∏–Ω–∞: {'‚úÖ' if cart_ok else '‚ùå'}")
    
    if catalog_ok and cart_ok:
        print("\nüéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—Ä–∑–∏–Ω—ã...")
        try:
            cart_data = {
                "items": [
                    {"audiobook_id": 1, "quantity": 2},
                    {"audiobook_id": 2, "quantity": 1}
                ]
            }
            
            response = requests.post(
                "http://localhost:8002/api/v1/cart/calculate",
                json=cart_data,
                timeout=5
            )
            
            if response.status_code == 200:
                result = response.json()
                print("‚úÖ –†–∞—Å—á–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã —É—Å–ø–µ—à–µ–Ω!")
                print(f"   –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {result['total_price']}")
                print(f"   –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: {len(result['items'])}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞: {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    else:
        print("\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ:")
        print("   - –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–∞—Ç–∞–ª–æ–≥': cd services/catalog && python main.py")
        print("   - –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–æ—Ä–∑–∏–Ω–∞': cd services/cart && python run_app.py")

if __name__ == "__main__":
    main() 