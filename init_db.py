#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Audio Store.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö MySQL –∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã
–Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–º–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π.
"""

import sys
import os
import argparse
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é database
sys.path.append(os.path.dirname(__file__))

from database.connection import (
    initialize_database,
    get_database_info,
    check_database_connection,
    reset_database,
    get_database_path
)
from database.models import Base, Author, Category, Audiobook
from database.repositories import AuthorRepository, CategoryRepository, AudiobookRepository
from database.services import CatalogDomainService

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


def create_sample_data():
    """
    –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏.
    """
    logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑—Ü–æ–≤ –¥–∞–Ω–Ω—ã—Ö...")
    
    from database.connection import get_db_session
    
    with get_db_session() as session:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
        author_repo = AuthorRepository(session)
        category_repo = CategoryRepository(session)
        audiobook_repo = AudiobookRepository(session)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–æ–≤
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–æ–≤...")
        authors = [
            author_repo.create("–î–∂–æ—Ä–¥–∂ –†.–†. –ú–∞—Ä—Ç–∏–Ω"),
            author_repo.create("–î–∂.–ö. –†–æ—É–ª–∏–Ω–≥"),
            author_repo.create("–î–∂.–†.–†. –¢–æ–ª–∫–∏–Ω"),
            author_repo.create("–§—Ä—ç–Ω–∫ –ì–µ—Ä–±–µ—Ä—Ç"),
            author_repo.create("–ê–π–∑–µ–∫ –ê–∑–∏–º–æ–≤")
        ]
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
        categories = [
            category_repo.create("–§—ç–Ω—Ç–µ–∑–∏"),
            category_repo.create("–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞"),
            category_repo.create("–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"),
            category_repo.create("–î–µ—Ç–µ–∫—Ç–∏–≤"),
            category_repo.create("–†–æ–º–∞–Ω")
        ]
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥...")
        audiobooks = [
            {
                "title": "–ò–≥—Ä–∞ –ø—Ä–µ—Å—Ç–æ–ª–æ–≤",
                "author_name": "–î–∂–æ—Ä–¥–∂ –†.–†. –ú–∞—Ä—Ç–∏–Ω",
                "price": 29.99,
                "description": "–≠–ø–∏—á–µ—Å–∫–∞—è —Å–∞–≥–∞ –æ –±–æ—Ä—å–±–µ –∑–∞ –≤–ª–∞—Å—Ç—å –≤ –í–µ—Å—Ç–µ—Ä–æ—Å–µ",
                "category_names": ["–§—ç–Ω—Ç–µ–∑–∏", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"]
            },
            {
                "title": "–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä –∏ —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –∫–∞–º–µ–Ω—å",
                "author_name": "–î–∂.–ö. –†–æ—É–ª–∏–Ω–≥",
                "price": 24.99,
                "description": "–ü–µ—Ä–≤–∞—è –∫–Ω–∏–≥–∞ –æ —é–Ω–æ–º –≤–æ–ª—à–µ–±–Ω–∏–∫–µ",
                "category_names": ["–§—ç–Ω—Ç–µ–∑–∏", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"]
            },
            {
                "title": "–í–ª–∞—Å—Ç–µ–ª–∏–Ω –∫–æ–ª–µ—Ü",
                "author_name": "–î–∂.–†.–†. –¢–æ–ª–∫–∏–Ω",
                "price": 39.99,
                "description": "–≠–ø–∏—á–µ—Å–∫–∞—è —Ç—Ä–∏–ª–æ–≥–∏—è –æ –∫–æ–ª—å—Ü–µ –≤—Å–µ–≤–ª–∞—Å—Ç—å—è",
                "category_names": ["–§—ç–Ω—Ç–µ–∑–∏", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"]
            },
            {
                "title": "–î—é–Ω–∞",
                "author_name": "–§—Ä—ç–Ω–∫ –ì–µ—Ä–±–µ—Ä—Ç",
                "price": 34.99,
                "description": "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–æ–º–∞–Ω –Ω–∞—É—á–Ω–æ–π —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∏",
                "category_names": ["–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"]
            },
            {
                "title": "–û—Å–Ω–æ–≤–∞–Ω–∏–µ",
                "author_name": "–ê–π–∑–µ–∫ –ê–∑–∏–º–æ–≤",
                "price": 27.99,
                "description": "–¶–∏–∫–ª —Ä–æ–º–∞–Ω–æ–≤ –æ –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –∏–º–ø–µ—Ä–∏–∏",
                "category_names": ["–ù–∞—É—á–Ω–∞—è —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞"]
            }
        ]
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥ —á–µ—Ä–µ–∑ –¥–æ–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å
        catalog_service = CatalogDomainService(session)
        for audiobook_data in audiobooks:
            catalog_service.create_audiobook_with_author_and_categories(**audiobook_data)
        
        logger.info(f"–°–æ–∑–¥–∞–Ω–æ {len(authors)} –∞–≤—Ç–æ—Ä–æ–≤, {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π, {len(audiobooks)} –∞—É–¥–∏–æ–∫–Ω–∏–≥")


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞.
    """
    parser = argparse.ArgumentParser(
        description="–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Audio Store"
    )
    parser.add_argument(
        "--reset",
        action="store_true",
        help="–°–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ)"
    )
    parser.add_argument(
        "--sample-data",
        action="store_true",
        help="–°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö"
    )
    parser.add_argument(
        "--info",
        action="store_true",
        help="–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    )
    parser.add_argument(
        "--check",
        action="store_true",
        help="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
    )
    
    args = parser.parse_args()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        if args.check:
            logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
            if check_database_connection():
                logger.info("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ")
            else:
                logger.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                return 1
        
        # –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if args.reset:
            logger.warning("–°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã!")
            reset_database()
            logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        initialize_database()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑—Ü–æ–≤ –¥–∞–Ω–Ω—ã—Ö
        if args.sample_data:
            create_sample_data()
            logger.info("‚úÖ –û–±—Ä–∞–∑—Ü—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω—ã")
        
        # –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if args.info:
            logger.info("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
            info = get_database_info()
            print(f"  –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {info['database_path']}")
            print(f"  URL: {info['database_url']}")
            print(f"  –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {'‚úÖ' if info['connection_status'] else '‚ùå'}")
            print(f"  –¢–∞–±–ª–∏—Ü—ã: {', '.join(info['tables'])}")
        
        # –ü–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        logger.info(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö MySQL –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        
        logger.info("üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        return 0
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return 1


if __name__ == "__main__":
    exit(main())
