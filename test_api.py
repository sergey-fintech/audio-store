#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è API —Å —Ç–æ—á–Ω—ã–º —Ä–∞—Å—á–µ—Ç–æ–º –∫–æ—Ä–∑–∏–Ω—ã
"""

import requests
import json
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, project_root)

def test_cart_calculation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å—á–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—Ä–∑–∏–Ω—ã")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞
    cart_data = {
        "items": [
            {"audiobook_id": 1, "quantity": 2},
            {"audiobook_id": 2, "quantity": 1}
        ]
    }
    
    try:
        print(f"üìã –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞—Å—á–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã:")
        print(json.dumps(cart_data, indent=2, ensure_ascii=False))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–∞—Å—á–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã
        response = requests.post(
            "http://localhost:8002/api/v1/cart/calculate",
            json=cart_data,
            timeout=10
        )
        
        print(f"\nüìä –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–∏—Å–∞ –∫–æ—Ä–∑–∏–Ω—ã (—Å—Ç–∞—Ç—É—Å {response.status_code}):")
        
        if response.status_code == 200:
            result = response.json()
            print(json.dumps(result, indent=2, ensure_ascii=False))
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            print("\nüí∞ –ê–Ω–∞–ª–∏–∑ —Ä–∞—Å—á–µ—Ç–∞:")
            print(f"   –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {result['total_price']} —Ä—É–±.")
            print(f"   –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: {len(result['items'])}")
            print(f"   –í—Ä–µ–º—è —Ä–∞—Å—á–µ—Ç–∞: {result['calculated_at']}")
            
            if result['items']:
                print("\nüìö –î–µ—Ç–∞–ª–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º:")
                total_check = 0
                for item in result['items']:
                    item_total = item['price_per_unit'] * item['quantity']
                    total_check += item_total
                    print(f"   - {item['title']}")
                    print(f"     –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É: {item['price_per_unit']} —Ä—É–±.")
                    print(f"     –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item['quantity']}")
                    print(f"     –ò—Ç–æ–≥–æ –∑–∞ —Ç–æ–≤–∞—Ä: {item['total_price']} —Ä—É–±.")
                    print(f"     –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–∞: {item['price_per_unit']} √ó {item['quantity']} = {item_total}")
                
                print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–π —Å—É–º–º—ã: {total_check} —Ä—É–±.")
                if abs(total_check - result['total_price']) < 0.01:
                    print("‚úÖ –†–∞—Å—á–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ!")
                    
                return result
            else:
                print("‚ö†Ô∏è  –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞—è - —Ç–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥–µ")
                return None
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return None

def test_order_creation(cart_result=None):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞"""
    print("\nüõí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞")
    print("=" * 50)
    
    # –î–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
    order_data = {
        "items": [
            {"audiobook_id": 1, "quantity": 2},
            {"audiobook_id": 2, "quantity": 1}
        ]
    }
    
    try:
        print(f"üìã –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞:")
        print(json.dumps(order_data, indent=2, ensure_ascii=False))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        response = requests.post(
            "http://localhost:8003/api/v1/orders",
            json=order_data,
            timeout=10
        )
        
        print(f"\nüìä –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–∏—Å–∞ –∑–∞–∫–∞–∑–æ–≤ (—Å—Ç–∞—Ç—É—Å {response.status_code}):")
        
        if response.status_code == 200:
            result = response.json()
            print(json.dumps(result, indent=2, ensure_ascii=False))
            
            print("\nüì¶ –ê–Ω–∞–ª–∏–∑ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞:")
            print(f"   ID –∑–∞–∫–∞–∑–∞: {result['id']}")
            print(f"   –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {result['order_number']}")
            print(f"   –û–±—â–∞—è —Å—É–º–º–∞: {result['total_amount']} —Ä—É–±.")
            print(f"   –°—Ç–∞—Ç—É—Å: {result['status']}")
            print(f"   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {result['created_at']}")
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∑–∏—Ü–∏–π: {len(result['items'])}")
            
            if result['items']:
                print("\nüìã –ü–æ–∑–∏—Ü–∏–∏ –∑–∞–∫–∞–∑–∞:")
                order_total = 0
                for item in result['items']:
                    item_total = float(item['price_per_unit']) * item['quantity']
                    order_total += item_total
                    print(f"   - {item['title']}")
                    print(f"     –¶–µ–Ω–∞: {item['price_per_unit']} —Ä—É–±. √ó {item['quantity']} = {item['total_price']} —Ä—É–±.")
                
                print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–π —Å—É–º–º—ã –∑–∞–∫–∞–∑–∞: {order_total} —Ä—É–±.")
                if abs(order_total - float(result['total_amount'])) < 0.01:
                    print("‚úÖ –†–∞—Å—á–µ—Ç –∑–∞–∫–∞–∑–∞ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞—Å—á–µ—Ç–µ –∑–∞–∫–∞–∑–∞!")
                    
                # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ä–∞—Å—á–µ—Ç–æ–º –∫–æ—Ä–∑–∏–Ω—ã
                if cart_result:
                    print(f"\nüîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ä–∞—Å—á–µ—Ç–æ–º –∫–æ—Ä–∑–∏–Ω—ã:")
                    print(f"   –ö–æ—Ä–∑–∏–Ω–∞: {cart_result['total_price']} —Ä—É–±.")
                    print(f"   –ó–∞–∫–∞–∑: {result['total_amount']} —Ä—É–±.")
                    if abs(cart_result['total_price'] - float(result['total_amount'])) < 0.01:
                        print("‚úÖ –°—É–º–º—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç!")
                    else:
                        print("‚ùå –°—É–º–º—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!")
                
            return result
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API Audio Store")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã
    cart_result = test_cart_calculation()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    order_result = test_order_creation(cart_result)
    
    print("\n" + "=" * 60)
    if cart_result and order_result:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìä –ò—Ç–æ–≥–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç:")
        print(f"   –ö–æ—Ä–∑–∏–Ω–∞: {cart_result['total_price']} —Ä—É–±.")
        print(f"   –ó–∞–∫–∞–∑: {order_result['total_amount']} —Ä—É–±.")
        print(f"   –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order_result['order_number']}")
    else:
        print("üí• –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å!")
        if not cart_result:
            print("   - –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞—Å—á–µ—Ç–æ–º –∫–æ—Ä–∑–∏–Ω—ã")
        if not order_result:
            print("   - –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞")

if __name__ == "__main__":
    main() 