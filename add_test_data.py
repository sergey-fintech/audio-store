#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
from decimal import Decimal

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, project_root)

def add_test_data():
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É"""
    try:
        from database.connection import get_db_session
        from database.models import Author, Category, Audiobook
        
        print("üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        
        with get_db_session() as db:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
            existing_count = db.query(Audiobook).count()
            print(f"üìä –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—É–¥–∏–æ–∫–Ω–∏–≥ –≤ –±–∞–∑–µ: {existing_count}")
            
            if existing_count > 0:
                print(f"‚úÖ –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å {existing_count} –∞—É–¥–∏–æ–∫–Ω–∏–≥")
                
                # –ü–æ–∫–∞–∂–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–∏–≥–∏
                books = db.query(Audiobook).all()
                print("\nüìö –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏:")
                for book in books:
                    print(f"   {book.id}. {book.title} - {book.price} —Ä—É–±.")
                return True
            
            # –°–æ–∑–¥–∞–µ–º –∞–≤—Ç–æ—Ä–æ–≤
            print("üë§ –°–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–æ–≤...")
            author1 = Author(name="–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π")
            author2 = Author(name="–§–µ–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π") 
            author3 = Author(name="–ê–Ω—Ç–æ–Ω –ß–µ—Ö–æ–≤")
            
            db.add_all([author1, author2, author3])
            db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID –∞–≤—Ç–æ—Ä–æ–≤
            print(f"   –°–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ—Ä–æ–≤: {len([author1, author2, author3])}")
            
            # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            print("üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
            classic = Category(name="–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞")
            drama = Category(name="–î—Ä–∞–º–∞")
            philosophy = Category(name="–§–∏–ª–æ—Å–æ—Ñ–∏—è")
            
            db.add_all([classic, drama, philosophy])
            db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            print(f"   –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len([classic, drama, philosophy])}")
            
            # –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏
            print("üìö –°–æ–∑–¥–∞–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥...")
            audiobooks = [
                Audiobook(
                    title="–í–æ–π–Ω–∞ –∏ –º–∏—Ä",
                    description="–≠–ø–∏—á–µ—Å–∫–∏–π —Ä–æ–º–∞–Ω –æ –≤–æ–π–Ω–µ 1812 –≥–æ–¥–∞",
                    price=Decimal("299.99"),
                    author_id=author1.id,
                    cover_image_url="https://example.com/war_and_peace.jpg"
                ),
                Audiobook(
                    title="–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ", 
                    description="–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–æ–º–∞–Ω –æ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –∏ –µ–≥–æ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è—Ö",
                    price=Decimal("199.99"),
                    author_id=author2.id,
                    cover_image_url="https://example.com/crime_punishment.jpg"
                ),
                Audiobook(
                    title="–í–∏—à–Ω–µ–≤—ã–π —Å–∞–¥",
                    description="–ü—å–µ—Å–∞ –æ —É—Ö–æ–¥—è—â–µ–π —ç–ø–æ—Ö–µ —Ä—É—Å—Å–∫–æ–≥–æ –¥–≤–æ—Ä—è–Ω—Å—Ç–≤–∞",
                    price=Decimal("149.99"),
                    author_id=author3.id,
                    cover_image_url="https://example.com/cherry_orchard.jpg"
                ),
                Audiobook(
                    title="–ê–Ω–Ω–∞ –ö–∞—Ä–µ–Ω–∏–Ω–∞",
                    description="–†–æ–º–∞–Ω –æ –ª—é–±–≤–∏ –∏ —Ç—Ä–∞–≥–µ–¥–∏–∏",
                    price=Decimal("249.99"),
                    author_id=author1.id,
                    cover_image_url="https://example.com/anna_karenina.jpg"
                ),
                Audiobook(
                    title="–ë—Ä–∞—Ç—å—è –ö–∞—Ä–∞–º–∞–∑–æ–≤—ã",
                    description="–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π —Ä–æ–º–∞–Ω –æ —Å–µ–º—å–µ –∏ –≤–µ—Ä–µ",
                    price=Decimal("279.99"),
                    author_id=author2.id,
                    cover_image_url="https://example.com/brothers_karamazov.jpg"
                )
            ]
            
            db.add_all(audiobooks)
            db.flush()  # –ü–æ–ª—É—á–∞–µ–º ID –∞—É–¥–∏–æ–∫–Ω–∏–≥
            print(f"   –°–æ–∑–¥–∞–Ω–æ –∞—É–¥–∏–æ–∫–Ω–∏–≥: {len(audiobooks)}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∞–º
            print("üîó –°–≤—è–∑—ã–≤–∞–Ω–∏–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏...")
            audiobooks[0].categories.extend([classic, drama])      # –í–æ–π–Ω–∞ –∏ –º–∏—Ä
            audiobooks[1].categories.extend([classic, philosophy]) # –ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ
            audiobooks[2].categories.append(drama)                 # –í–∏—à–Ω–µ–≤—ã–π —Å–∞–¥
            audiobooks[3].categories.extend([classic, drama])      # –ê–Ω–Ω–∞ –ö–∞—Ä–µ–Ω–∏–Ω–∞
            audiobooks[4].categories.extend([classic, philosophy]) # –ë—Ä–∞—Ç—å—è –ö–∞—Ä–∞–º–∞–∑–æ–≤—ã
            
            db.commit()
            
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print(f"   - –ê–≤—Ç–æ—Ä–æ–≤: {len([author1, author2, author3])}")
            print(f"   - –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {len([classic, drama, philosophy])}")
            print(f"   - –ê—É–¥–∏–æ–∫–Ω–∏–≥: {len(audiobooks)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏
            print("\nüìö –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏:")
            for book in audiobooks:
                print(f"   {book.id}. {book.title} - {book.price} —Ä—É–±. (–∞–≤—Ç–æ—Ä: {book.author.name})")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        import traceback
        traceback.print_exc()
        return False
        
    return True

if __name__ == "__main__":
    success = add_test_data()
    if success:
        print("\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤")
        print("üí° –ü—Ä–∏–º–µ—Ä—ã ID –∞—É–¥–∏–æ–∫–Ω–∏–≥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: 1, 2, 3, 4, 5")
    else:
        print("\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ")
        sys.exit(1) 