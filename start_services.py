#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
"""

import subprocess
import time
import requests
import sys
import os
import signal
import atexit

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
processes = []

def cleanup_processes():
    """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ"""
    for process in processes:
        try:
            if process.poll() is None:  # –ü—Ä–æ—Ü–µ—Å—Å –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
                process.terminate()
                process.wait(timeout=5)
        except:
            pass

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—á–∏—Å—Ç–∫–∏
atexit.register(cleanup_processes)

def start_catalog_service():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–∞—Ç–∞–ª–æ–≥'"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ '–ö–∞—Ç–∞–ª–æ–≥'...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        process = subprocess.Popen(
            [sys.executable, "services/catalog/main.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        
        print(f"‚úÖ –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–∞—Ç–∞–ª–æ–≥' –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
        processes.append(process)
        return process
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ '–ö–∞—Ç–∞–ª–æ–≥': {e}")
        return None

def start_cart_service():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–æ—Ä–∑–∏–Ω–∞'"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ '–ö–æ—Ä–∑–∏–Ω–∞'...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        process = subprocess.Popen(
            [sys.executable, "services/cart/run_app.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        
        print(f"‚úÖ –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–æ—Ä–∑–∏–Ω–∞' –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
        processes.append(process)
        return process
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ '–ö–æ—Ä–∑–∏–Ω–∞': {e}")
        return None

def start_orders_service():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ó–∞–∫–∞–∑—ã'"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ '–ó–∞–∫–∞–∑—ã'...")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        process = subprocess.Popen(
            [sys.executable, "services/orders/run_app.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        
        print(f"‚úÖ –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ó–∞–∫–∞–∑—ã' –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
        processes.append(process)
        return process
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ '–ó–∞–∫–∞–∑—ã': {e}")
        return None

def wait_for_service(url, service_name, timeout=30):
    """–û–∂–∏–¥–∞–µ—Ç –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"""
    print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ {service_name}...")
    
    for i in range(timeout):
        try:
            response = requests.get(url, timeout=2)
            if response.status_code == 200:
                print(f"‚úÖ {service_name} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
                return True
        except:
            pass
        
        time.sleep(1)
        if (i + 1) % 5 == 0:
            print(f"   ... –µ—â–µ {timeout - i - 1} —Å–µ–∫—É–Ω–¥")
    
    print(f"‚ùå {service_name} –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ {timeout} —Å–µ–∫—É–Ω–¥")
    return False

def test_cart_calculation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å—á–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –∫–æ—Ä–∑–∏–Ω—ã...")
    
    try:
        cart_data = {
            "items": [
                {"audiobook_id": 1, "quantity": 2},
                {"audiobook_id": 2, "quantity": 1}
            ]
        }
        
        response = requests.post(
            "http://localhost:8002/api/v1/cart/calculate",
            json=cart_data,
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –†–∞—Å—á–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã —É—Å–ø–µ—à–µ–Ω!")
            print(f"   –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {result['total_price']}")
            print(f"   –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ: {len(result['items'])}")
            
            for item in result['items']:
                print(f"   - {item['title']}: {item['quantity']} x {item['price_per_unit']} = {item['total_price']}")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def signal_handler(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É...")
    cleanup_processes()
    sys.exit(0)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤ Audio Store")
    print("=" * 50)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    script_dir = os.path.dirname(os.path.abspath(__file__))
    os.chdir(script_dir)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å "–ö–∞—Ç–∞–ª–æ–≥"
    catalog_process = start_catalog_service()
    if not catalog_process:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–∞—Ç–∞–ª–æ–≥'")
        return
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ "–ö–∞—Ç–∞–ª–æ–≥"
    if not wait_for_service("http://localhost:8001/health", "–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–∞—Ç–∞–ª–æ–≥'"):
        print("‚ùå –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–∞—Ç–∞–ª–æ–≥' –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å "–ö–æ—Ä–∑–∏–Ω–∞"
    cart_process = start_cart_service()
    if not cart_process:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–æ—Ä–∑–∏–Ω–∞'")
        return
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ "–ö–æ—Ä–∑–∏–Ω–∞"
    if not wait_for_service("http://localhost:8002/health", "–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–æ—Ä–∑–∏–Ω–∞'"):
        print("‚ùå –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ö–æ—Ä–∑–∏–Ω–∞' –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å "–ó–∞–∫–∞–∑—ã"
    orders_process = start_orders_service()
    if not orders_process:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ó–∞–∫–∞–∑—ã'")
        return
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞ "–ó–∞–∫–∞–∑—ã"
    if not wait_for_service("http://localhost:8003/health", "–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ó–∞–∫–∞–∑—ã'"):
        print("‚ùå –ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å '–ó–∞–∫–∞–∑—ã' –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è")
        return
    
    print("\nüéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!")
    print("   - –ö–∞—Ç–∞–ª–æ–≥: http://localhost:8001")
    print("   - –ö–æ—Ä–∑–∏–Ω–∞: http://localhost:8002")
    print("   - –ó–∞–∫–∞–∑—ã: http://localhost:8003")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç –∫–æ—Ä–∑–∏–Ω—ã
    test_cart_calculation()
    
    print("\nüìã –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    
    try:
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
        while True:
            time.sleep(1)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—â–µ —Ä–∞–±–æ—Ç–∞—é—Ç
            for process in processes:
                if process.poll() is not None:
                    print(f"‚ö†Ô∏è  –ü—Ä–æ—Ü–µ—Å—Å {process.pid} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è")
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...")
        cleanup_processes()
        print("‚úÖ –°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

if __name__ == "__main__":
    main() 